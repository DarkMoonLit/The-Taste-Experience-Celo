{"version":3,"sources":["components/Cover.js","components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/wallet/index.js","hooks/useMinterContract.js","hooks/useContract.js","components/minter/nfts/AddRecipe.js","components/minter/nfts/Recipe.js","components/ui/Loader.js","components/minter/nfts/index.js","assets/img/sandwich.jpg","App.js","hooks/useBalance.js","reportWebVitals.js","index.js","utils/minter.js"],"names":["Cover","name","coverImg","connect","className","style","background","minHeight","maxWidth","src","alt","Button","onClick","catch","e","console","log","variant","defaultProps","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","truncateAddress","address","slice","length","formatBigNumber","num","shiftedBy","toFixed","Identicon","size","rest","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","width","height","Wallet","amount","symbol","destroy","Dropdown","Toggle","align","id","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","Divider","as","useMinterContract","abi","contractAddress","useContractKit","getConnectedKit","useState","contract","setContract","getContract","useCallback","kit","web3","eth","Contract","useContract","TheTasteExperienceAbi","TheTasteExperienceContractAddress","TheTasteExperience","AddRecipe","save","setName","image","setImage","description","setDescription","formula","setFormula","price","setPrice","show","setShow","handleClose","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","value","placeholder","uploadToIpfs","imageUrl","alert","ethers","utils","parseUnits","Footer","disabled","Recipe","recipe","buy","reviewRecipe","index","sold","owner","canView","canReview","feedbacks","ratingsCounter","review","setReview","rate","setRate","showFormula","setShowFormula","handleCloseFormula","Col","Card","Badge","bg","objectFit","Text","backdrop","keyboard","children","Container","ListGroup","map","feedback","backgroundColor","color","reviewer","rating","Group","Label","min","max","Loader","role","Recipes","minterContract","recipes","setRecipes","loading","setLoading","performActions","getAssets","getRecipes","addRecipe","data","createRecipe","toast","buyRecipe","rateRecipe","error","Row","xs","sm","lg","_recipe","App","balance","setBalance","getBalance","getTotalBalance","useBalance","fluid","Nav","CELO","updateBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","url","document","getElementById","auth","Buffer","from","process","toString","client","ipfsHttpClient","host","port","protocol","apiPath","headers","authorization","defaultAccount","encryptFormula","CryptoJS","AES","encrypt","JSON","stringify","add","added","path","methods","send","transaction","file","files","progress","prog","nfts","getRecipesLength","call","nftsLength","i","nft","Promise","resolve","tokenURI","res","getRecipe","recipeData","fetchNftMeta","meta","bytes","decrypt","enc","Utf8","BigNumber","push","Number","all","ipfsUrl","axios","get"],"mappings":"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","file":"static/js/main.460f3f58.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from \"react-bootstrap\";\nimport PropTypes from 'prop-types';\n\nconst Cover = ({ name, coverImg, connect }) => {\n  if (name) {\n    return (\n      <div\n          className=\"d-flex justify-content-center flex-column text-center \"\n          style={{ background: \"#000\", minHeight: \"100vh\" }}\n        >\n          <div className=\"mt-auto text-light mb-5\">\n            <div\n              className=\" ratio ratio-1x1 mx-auto mb-2\"\n              style={{ maxWidth: \"320px\" }}\n            >\n              <img src={coverImg} alt=\"\" />\n            </div>\n            <h1>{name}</h1>\n            <p>Please connect your wallet to continue.</p>\n            <Button\n              onClick={() => connect().catch((e) => console.log(e))}\n              variant=\"outline-light\"\n              className=\"rounded-pill px-3 mt-3\"\n            >\n              Connect Wallet\n            </Button>\n          </div>\n\n          <p className=\"mt-auto text-secondary\">Powered by Celo</p>\n        </div>\n    );\n  }\n\n  return null;\n};\n\n\nCover.propTypes = {\n  // props passed into this component\n  name: PropTypes.string,\n};\n\nCover.defaultProps = {\n  name: '',\n};\n\nexport default Cover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {ToastContainer} from 'react-toastify';\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"bottom-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n  <div>\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst NotificationError = ({ text }) => (\n  <div>\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst Props = {\n  text: PropTypes.string,\n};\n\nconst DefaultProps = {\n  text: '',\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\nexport { Notification, NotificationSuccess, NotificationError };\n","import {ERC20_DECIMALS} from \"./constants\";\n\n// format a wallet address\nexport const truncateAddress = (address) => {\n    if (!address) return\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 4, address.length);\n}\n\n// convert from big number\nexport const formatBigNumber = (num) => {\n    if (!num) return\n    return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n}","const ERC20_DECIMALS = 18;\nexport { ERC20_DECIMALS };\n","import { useEffect, useRef } from \"react\";\nimport Jazzicon from \"@metamask/jazzicon\";\n\nexport default function Identicon({address, size, ...rest}) {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (address && ref.current) {\n      ref.current.innerHTML = \"\";\n      ref.current.appendChild(Jazzicon(size, parseInt(address.slice(2, 10), 16)));\n    }\n  }, [address, size]);\n\n  return (\n    <div {...rest} >\n        <div ref={ref} style={{width:`${size}px`,height:`${size}px`}}  />\n    </div>\n  )\n}","import React from 'react';\nimport {Dropdown, Stack, Spinner} from 'react-bootstrap';\nimport {formatBigNumber, truncateAddress} from '../../utils';\nimport Identicon from '../ui/Identicon'\n\nconst Wallet = ({address, amount, symbol, destroy}) => {\n    if (address) {\n        return <>\n\n            <Dropdown>\n                <Dropdown.Toggle variant=\"light\" align=\"end\" id=\"dropdown-basic\"\n                                 className=\"d-flex align-items-center border rounded-pill py-1\">\n                    {amount ? (\n                        <>{formatBigNumber(amount)} <span className=\"ms-1\"> {symbol}</span></>\n                    ) : (<Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\"/>)}\n                    <Identicon address={address} size={28} className=\"ms-2 me-1\"/>\n                </Dropdown.Toggle>\n\n      <Dropdown.Menu className=\"shadow-lg border-0\" >\n        <Dropdown.Item href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}  target=\"_blank\">     \n            <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">{truncateAddress(address)}</span>\n            </Stack>\n        </Dropdown.Item>\n        <Dropdown.Divider/>\n          <Dropdown.Item as=\"button\" className=\"d-flex align-items-center\" onClick={() => {\n              destroy()\n          }}>\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\"/>\n              Disconnect\n          </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n    \n    </>\n  }\n\n  return null;\n};\n\nexport default Wallet;","import {useContract} from './useContract';\nimport TheTasteExperienceAbi from '../contracts/TheTasteExperience.json';\nimport TheTasteExperienceContractAddress from '../contracts/TheTasteExperience-address.json';\n\n\n// export interface for NFT contract\nexport const useMinterContract = () => useContract(TheTasteExperienceAbi.abi, TheTasteExperienceContractAddress.TheTasteExperience);","import { useState, useEffect, useCallback } from 'react';\nimport { useContractKit } from '@celo-tools/use-contractkit';\n\nexport const useContract = (abi, contractAddress) => {\n  const { getConnectedKit, address } = useContractKit();\n  const [contract, setContract] = useState(null);\n\n  const getContract = useCallback(async () => {\n    const kit = await getConnectedKit();\n\n    // get a contract interface to interact with\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\n  }, [getConnectedKit, abi, contractAddress]);\n\n  useEffect(() => {\n    if (address) getContract();\n  }, [address, getContract]);\n\n  return contract;\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\nimport { uploadToIpfs } from \"../../../utils/minter\";\nimport { ethers } from \"ethers\";\nconst AddRecipe = ({ save }) => {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [formula, setFormula] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const isFormFilled = () => name && image && description && formula && price;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button\n        onClick={handleShow}\n        variant=\"dark\"\n        className=\"rounded-pill px-0\"\n        style={{ width: \"38px\" }}\n      >\n        <i className=\"bi bi-plus\"></i>\n      </Button>\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>New Recipe</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <FloatingLabel\n              controlId=\"inputName\"\n              label=\"Recipe name\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                placeholder=\"Enter name of recipe\"\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputUrl\"\n              label=\"Image URL\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                  type=\"file\"\n                  className={\"mb-3\"}\n                  onChange={async (e) => {\n                      const imageUrl = await uploadToIpfs(e)\n                      if (!imageUrl) {\n                          alert(\"failed to upload image\");\n                          return;\n                      }\n                      setImage(imageUrl);\n                  }\n                  }\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputDescription\"\n              label=\"Description\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"description\"\n                style={{ height: \"80px\" }}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputFormula\"\n              label=\"Formula\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Use markdown to write formula down\"\n                onChange={(e) => {\n                  setFormula(e.target.value);\n                }}\n                style={{ height: '200px' }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputPrice\"\n              label=\"Price\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Price\"\n                onChange={(e) => {\n                  setPrice(ethers.utils.parseUnits(e.target.value));\n                }}\n              />\n            </FloatingLabel>\n          </Modal.Body>\n        </Form>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"dark\"\n            disabled={!isFormFilled()}\n            onClick={() => {\n              save({\n                name,\n                image,\n                description,\n                formula,\n                price,\n              });\n              handleClose();\n            }}\n          >\n            Save recipe\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nAddRecipe.propTypes = {\n  save: PropTypes.func.isRequired,\n};\n\nexport default AddRecipe;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tCard,\n\tButton,\n\tCol,\n\tBadge,\n\tStack,\n\tModal,\n\tForm,\n\tListGroup,\n\tContainer,\n} from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown\";\nimport { formatBigNumber, truncateAddress } from \"../../../utils\";\nimport Identicon from \"../../ui/Identicon\"\n\nconst Recipe = ({ recipe, buy, reviewRecipe, address }) => {\n\tconst {\n\t\tindex,\n\t\tprice,\n\t\tname,\n\t\tdescription,\n\t\tsold,\n\t\tformula,\n\t\timage,\n\t\towner,\n\t\tcanView,\n\t\tcanReview,\n\t\tfeedbacks,\n\t\tratingsCounter,\n\t} = recipe;\n\tconst [review, setReview] = useState(\"\");\n\tconst [rate, setRate] = useState(\"\");\n\tconst [show, setShow] = useState(false);\n\tconst [showFormula, setShowFormula] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\tconst handleCloseFormula = () => setShowFormula(false);\n\tconst handleShowFormula = () => setShowFormula(true);\n\n\treturn (\n\t\t<Col>\n\t\t\t<Card className=\" h-100\">\n\t\t\t\t<Card.Header>\n\t\t\t\t\t<Stack direction=\"horizontal\" gap={2}>\n\t\t\t\t\t\t<span className=\"font-monospace text-secondary\">\n\t\t\t\t\t\t\t{truncateAddress(owner)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<Badge bg=\"secondary\" className=\"ms-auto\">\n\t\t\t\t\t\t\t{sold} sold\n\t\t\t\t\t\t</Badge>\n\n\t\t\t\t\t\t<Badge bg=\"primary\" className=\"ms-auto\">\n\t\t\t\t\t\t\tRated: {feedbacks.length > 0? ratingsCounter / feedbacks.length : \"\"}\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Card.Header>\n\t\t\t\t<div className=\" ratio ratio-4x3\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\talt={name}\n\t\t\t\t\t\tstyle={{ objectFit: \"cover\" }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Card.Body className=\"d-flex  flex-column text-center\">\n\t\t\t\t\t<Card.Title>{name}</Card.Title>\n\t\t\t\t\t<Card.Text className=\"flex-grow-1 \">\n\t\t\t\t\t\t{description}\n\t\t\t\t\t</Card.Text>\n\t\t\t\t\t{canView || address === owner ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\t\tonClick={handleShowFormula}\n\t\t\t\t\t\t\t\tclassName=\"mb-2\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShow formula\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\tshow={showFormula}\n\t\t\t\t\t\t\t\tonHide={handleCloseFormula}\n\t\t\t\t\t\t\t\tbackdrop=\"static\"\n\t\t\t\t\t\t\t\tkeyboard={false}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t\t\t\t\tFormula for {name}\n\t\t\t\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t<ReactMarkdown\n\t\t\t\t\t\t\t\t\t\tchildren={formula}\n\t\t\t\t\t\t\t\t\t></ReactMarkdown>\n\t\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tonClick={handleCloseFormula}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outline-dark\"\n\t\t\t\t\t\t\tonClick={() => buy(index, price)}\n\t\t\t\t\t\t\tclassName=\"w-100 py-3\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBuy for {formatBigNumber(price)} CELO\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\tonClick={handleShow}\n\t\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\tReviews\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tshow={show}\n\t\t\t\t\t\tonHide={handleClose}\n\t\t\t\t\t\tbackdrop=\"static\"\n\t\t\t\t\t\tkeyboard={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t<Modal.Title>Reviews for {name}</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t<ListGroup as=\"ul\">\n\t\t\t\t\t\t\t\t\t{feedbacks.map((feedback, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item as=\"li\" key={index} className=\"mt-2\" style={{backgroundColor: \"black\", color: \"white\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Stack direction=\"horizontal\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Identicon address={feedback.reviewer} size={28} className=\"ms-2 me-1\"/>\n\t\t\t\t\t\t\t\t\t\t\t\tRating: {feedback.rating}\n\t\t\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t\t\t\t{feedback.review}\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t{canReview ? (\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\t\t\t\t\tcontrolId=\"review\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Review</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={review}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetReview(e.target.value)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: \"150px\" }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\t\t\t\t\tcontrolId=\"rate\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Rate</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\t\t\t\tmax=\"5\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={rate}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetRate(e.target.value)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\t\t\treviewRecipe(index, review, rate);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSubmit Review\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Modal>\n\t\t\t\t</Card.Body>\n\t\t\t\t<Card.Footer></Card.Footer>\n\t\t\t</Card>\n\t\t</Col>\n\t);\n};\n\nRecipe.propTypes = {\n\trecipe: PropTypes.instanceOf(Object).isRequired,\n\tbuy: PropTypes.func.isRequired,\n\treviewRecipe: PropTypes.func.isRequired,\n\taddress: PropTypes.string.isRequired,\n};\n\nexport default Recipe;\n","import React from 'react';\nimport { Spinner} from \"react-bootstrap\";\nconst Loader = () => (\n \n \n  <div className=\"d-flex justify-content-center\">\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  </div>\n\n);\nexport default Loader;\n","\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AddRecipe from \"./AddRecipe\";\nimport Recipe from \"./Recipe\";\nimport Loader from \"../../ui/Loader\";\nimport { Row } from \"react-bootstrap\";\n\nimport { NotificationSuccess, NotificationError } from \"../../ui/Notifications\";\nimport {\n\tgetRecipes,buyRecipe,rateRecipe, createRecipe\n} from \"../../../utils/minter\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\n\n\nconst Recipes = ({minterContract }) => {\n\tconst [recipes, setRecipes] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst {performActions, address} = useContractKit();\n\n\t// function to get the list of recipes\n\tconst getAssets = useCallback(async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst recipes = await getRecipes(minterContract);\n\t\t\tif(!recipes) return\n\t\t\tsetRecipes(recipes)\n\t\t} catch (e) {\n\t\t\tconsole.log({ e });\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [minterContract]);\n\n\n\n\tconst addRecipe = async (data) => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tawait createRecipe(minterContract, performActions, data);\n\t\t\ttoast(<NotificationSuccess text=\"Recipe added successfully.\" />);\n\t\t\tgetAssets();\n\t\t} catch (e) {\n\t\t\tconsole.log({ e });\n\t\t\ttoast(<NotificationError text=\"Failed to create a recipe.\" />);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\n\t//  function to initiate transaction to buy recipe\n\tconst buy = useCallback(async (index, price) => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tawait buyRecipe(minterContract, performActions, index, price);\n\t\t\ttoast(<NotificationSuccess text=\"Recipe bought successfully\" />);\n\t\t\tgetAssets();\n\t\t} catch (error) {\n\t\t\ttoast(<NotificationError text=\"Failed to purchase recipe.\" />);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [minterContract, getAssets, performActions]);\n\n\t//  function to initiate transaction to modify the formula of recipe\n\tconst review = useCallback(async (index, review, rate) => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tawait rateRecipe(minterContract, performActions, index, rate, review);\n\t\t\tgetAssets();\n\t\t\ttoast(\n\t\t\t\t<NotificationSuccess text=\"Recipe's formula modified successfully\" />\n\t\t\t);\n\t\t} catch (error) {\n\t\t\ttoast(<NotificationError text=\"Failed to modified recipe.\" />);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [getAssets, minterContract, performActions]);\n\n\n\tuseEffect(() => {\n    try {\n      if (address && minterContract) {\n        getAssets();\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n  }, [minterContract, address, getAssets]);\n\n\treturn (\n\t\t<>\n\t\t\t{!loading ? (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"d-flex justify-content-between align-items-center mb-4\">\n\t\t\t\t\t\t<h1 className=\"fs-4 fw-bold mb-0\">\n\t\t\t\t\t\t\tThe Taste Experience\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<AddRecipe save={addRecipe} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Row\n\t\t\t\t\t\txs={1}\n\t\t\t\t\t\tsm={2}\n\t\t\t\t\t\tlg={3}\n\t\t\t\t\t\tclassName=\"g-3  mb-5 g-xl-4 g-xxl-5\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{recipes.map((_recipe) => (\n\t\t\t\t\t\t\t<Recipe\n\t\t\t\t\t\t\t\tkey={_recipe.index}\n\t\t\t\t\t\t\t\trecipe={{\n\t\t\t\t\t\t\t\t\t..._recipe,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tbuy={buy}\n\t\t\t\t\t\t\t\treviewRecipe={review}\n\t\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Row>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Loader />\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Recipes;","export default __webpack_public_path__ + \"static/media/sandwich.2d312449.jpg\";","import React from \"react\";\nimport Cover from \"./components/Cover\";\nimport {Notification} from \"./components/ui/Notifications\";\nimport Wallet from \"./components/wallet\";\nimport {useBalance, useMinterContract} from \"./hooks\";\n\n\nimport Recipes from \"./components/minter/nfts\";\nimport {useContractKit} from \"@celo-tools/use-contractkit\";\n\nimport coverImg from \"./assets/img/sandwich.jpg\";\nimport \"./App.css\";\n\n\nimport {Container, Nav} from \"react-bootstrap\";\n\nconst App = function AppWrapper() {\n    /*\n    address : fetch the connected wallet address\n    destroy: terminate connection to user wallet\n    connect : connect to the celo blockchain\n     */\n    const {address, destroy, connect} = useContractKit();\n\n    //  fetch user's celo balance using hook\n    const {balance, getBalance} = useBalance();\n\n    // initialize the NFT mint contract\n    const minterContract = useMinterContract();\n\n    return (\n        <>\n            <Notification/>\n\n            {address? (\n                <Container fluid=\"md\">\n                    <Nav className=\"justify-content-end pt-3 pb-5\">\n                        <Nav.Item>\n\n                            {/*display user wallet*/}\n                            <Wallet\n                                address={address}\n                                amount={balance.CELO}\n                                symbol=\"CELO\"\n                                destroy={destroy}\n                            />\n                        </Nav.Item>\n                    </Nav>\n                    <main>\n\n                        {/*list NFTs*/}\n                        <Recipes\n                            name=\"The Taste Experience\"\n                            updateBalance={getBalance}\n                            minterContract={minterContract}\n                        />\n                    </main>\n                </Container>\n            ) : (\n                //  if user wallet is not connected display cover page\n                <Cover name=\"The Taste Experience\" coverImg={coverImg} connect={connect}/>\n            )}\n        </>\n    );\n};\n\nexport default App;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useContractKit } from '@celo-tools/use-contractkit';\n\nexport const useBalance = () => {\n  const { address, kit } = useContractKit();\n  const [balance, setBalance] = useState(0);\n\n\n  const getBalance = useCallback(async () => {\n\n    // fetch a connected wallet token balance\n    const value = await kit.getTotalBalance(address);\n    setBalance(value);\n  }, [address, kit]);\n\n  useEffect(() => {\n    if (address) getBalance();\n  }, [address, getBalance]);\n\n  return {\n    balance,\n    getBalance,\n  };\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    ContractKitProvider,\n    Alfajores,\n    NetworkNames,\n} from '@celo-tools/use-contractkit';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <ContractKitProvider\n            networks={[Alfajores]}\n            network={{\n                name: NetworkNames.Alfajores,\n                rpcUrl: 'https://alfajores-forno.celo-testnet.org',\n                graphQl: 'https://alfajores-blockscout.celo-testnet.org/graphiql',\n        explorer: 'https://alfajores-blockscout.celo-testnet.org',\n        chainId: 44787,\n      }}\n      dapp={{\n        name: 'The Taste Experience.',\n        description: 'An NFT collection of cooking recipes.',\n        url: 'https://dacade.org',\n      }}\n    >\n      <App />\n    </ContractKitProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { create as ipfsHttpClient } from \"ipfs-http-client\";\nimport axios from \"axios\";\nimport CryptoJS from \"crypto-js\";\nimport BigNumber from \"bignumber.js\";\n// initialize IPFS\nconst auth =\n\t\"Basic \" +\n\tBuffer.from(\n\t\tprocess.env.REACT_APP_PROJECT_ID +\n\t\t\t\":\" +\n\t\t\tprocess.env.REACT_APP_PROJECT_SECRET\n\t).toString(\"base64\");\n\nconst client = ipfsHttpClient({\n\thost: \"ipfs.infura.io\",\n\tport: 5001,\n\tprotocol: \"https\",\n\tapiPath: \"/api/v0\",\n\theaders: {\n\t\tauthorization: auth,\n\t},\n});\n\n// mint an NFT\nexport const createRecipe = async (\n\tminterContract,\n\tperformActions,\n\t{ name, description, image, formula, price }\n) => {\n\tawait performActions(async (kit) => {\n\t\tif (!name || !description || !image || !formula || !price) return;\n\t\tconst { defaultAccount } = kit;\n\t\ttry {\n\n\t\t\tconst passphrase = process.env.REACT_APP_PASSPHRASE;\n\t\t\t// encrypt formula using passphrase\n\t\t\tconst encryptFormula = CryptoJS.AES.encrypt(\n\t\t\t\tformula,\n\t\t\t\tpassphrase\n\t\t\t).toString();\n\t\t\t// convert NFT metadata to JSON format\n\t\t\tconst data = JSON.stringify({\n\t\t\t\tname,\n\t\t\t\tdescription,\n\t\t\t\timage,\n\t\t\t\tencryptFormula,\n\t\t\t});\n\n\t\t\t// save NFT metadata to IPFS\n\t\t\tconst added = await client.add(data);\n\n\t\t\t// IPFS url for uploaded metadata\n\t\t\tconst url = `https://infura-ipfs.io/ipfs/${added.path}`;\n\n\t\t\t// mint the NFT and save the IPFS url to the blockchain\n\t\t\tlet transaction = await minterContract.methods\n\t\t\t\t.createRecipe(url, price)\n\t\t\t\t.send({ from: defaultAccount });\n\n\t\t\treturn transaction;\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error uploading file: \", error);\n\t\t}\n\t});\n};\n\n// function to upload a file to IPFS\nexport const uploadToIpfs = async (e) => {\n\tconst file = e.target.files[0];\n\tif (!file) return;\n\ttry {\n\t\tconst added = await client.add(file, {\n\t\t\tprogress: (prog) => console.log(`received: ${prog}`),\n\t\t});\n\t\treturn `https://infura-ipfs.io/ipfs/${added.path}`;\n\t} catch (error) {\n\t\tconsole.log(\"Error uploading file: \", error);\n\t}\n};\n\n// fetch all NFTs on the smart contract\nexport const getRecipes = async (minterContract) => {\n\ttry {\n\t\tconst nfts = [];\n\t\tconst nftsLength = await minterContract.methods\n\t\t\t.getRecipesLength()\n\t\t\t.call();\n\t\tfor (let i = 0; i < Number(nftsLength); i++) {\n\t\t\tconst nft = new Promise(async (resolve) => {\n\t\t\t\tconst res = await minterContract.methods.tokenURI(i).call();\n\t\t\t\tconst recipeData = await minterContract.methods\n\t\t\t\t\t.getRecipe(i)\n\t\t\t\t\t.call();\n\t\t\t\tconst meta = await fetchNftMeta(res);\n\t\t\t\tconst passphrase = process.env.REACT_APP_PASSPHRASE;\n\t\t\t\t// decrypt formula using passphrase\n\t\t\t\tconst bytes = CryptoJS.AES.decrypt(\n\t\t\t\t\tmeta.data.encryptFormula,\n\t\t\t\t\tpassphrase\n\t\t\t\t);\n\t\t\t\t// convert bytes to human readable format\n\t\t\t\tconst formula = bytes.toString(CryptoJS.enc.Utf8);\n\t\t\t\tresolve({\n\t\t\t\t\towner: recipeData[0],\n\t\t\t\t\tindex: i,\n\t\t\t\t\tname: meta.data.name,\n\t\t\t\t\timage: meta.data.image,\n\t\t\t\t\tdescription: meta.data.description,\n\t\t\t\t\tformula,\n\t\t\t\t\tprice: new BigNumber(recipeData[1]),\n\t\t\t\t\tsold: recipeData[2],\n\t\t\t\t\tcanView: recipeData[3],\n\t\t\t\t\tcanReview: recipeData[4],\n\t\t\t\t\tfeedbacks: recipeData[5],\n\t\t\t\t\tratingsCounter: recipeData[6],\n\t\t\t\t});\n\t\t\t});\n\t\t\tnfts.push(nft);\n\t\t}\n\t\treturn Promise.all(nfts);\n\t} catch (e) {\n\t\tconsole.log({ e });\n\t}\n};\n\n// get the metedata for an NFT from IPFS\nexport const fetchNftMeta = async (ipfsUrl) => {\n\ttry {\n\t\tif (!ipfsUrl) return null;\n\t\tconst meta = await axios.get(ipfsUrl);\n\t\treturn meta;\n\t} catch (e) {\n\t\tconsole.log({ e });\n\t}\n};\n\n// get the address that deployed the NFT contract\nexport const fetchNftContractOwner = async (minterContract) => {\n\ttry {\n\t\tlet owner = await minterContract.methods.owner().call();\n\t\treturn owner;\n\t} catch (e) {\n\t\tconsole.log({ e });\n\t}\n};\n\nexport const buyRecipe = async (\n\tminterContract,\n\tperformActions,\n\tindex,\n\tprice\n) => {\n\ttry {\n\t\tawait performActions(async (kit) => {\n\t\t\tconst { defaultAccount } = kit;\n\t\t\tawait minterContract.methods\n\t\t\t\t.buyRecipe(index)\n\t\t\t\t.send({ from: defaultAccount, value: price });\n\t\t});\n\t} catch (e) {\n\t\tconsole.error({ e });\n\t}\n};\n\nexport const rateRecipe = async (\n\tminterContract,\n\tperformActions,\n\tindex,\n\trate,\n\treview\n) => {\n\ttry {\n\t\tawait performActions(async (kit) => {\n\t\t\tconst { defaultAccount } = kit;\n\t\t\tawait minterContract.methods\n\t\t\t\t.rateRecipe(index, rate, review)\n\t\t\t\t.send({ from: defaultAccount });\n\t\t});\n\t} catch (e) {\n\t\tconsole.error({ e });\n\t}\n};\n"],"sourceRoot":""}